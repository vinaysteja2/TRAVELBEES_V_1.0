Booking.url=http://booking:8084
Tour.url=http://tour:8083
Payment.url=http://payment:8089
Review.url=http://review:8085
TouristGuide.url=http://touristguide:8088
User.url=http://user:8086

spring.application.name=TouristGuide
server.port=8088

spring.datasource.url=jdbc:postgresql://postgres:5432/touristguide
spring.datasource.username=postgres
spring.datasource.password=vinayteja
spring.jpa.show-sql=true
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto = update
spring.datasource.hikari.auto-commit=false

#eureka
eureka.client.service-url.defaultZone=http://servicereg:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

#for logging using SL4J
#for enable of debug and trace
logging.level.com.touristguide.controller=DEBUG
#logging in a specific format
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
#for getting logs in file
logging.file.name=application.log

# Configure logging output format for file
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

##ZIPKIN
#management.tracing.sampling.probability=1.0

#config server
#spring.config.import=configserver:http://localhost:8080
#config server. for contacting with config sever we need to add  congig client dependency that is commented here.
#it will give error if we dont provide this line.
#spring.config.import=configserver:http://localhost:8080

#instead of that we can optional
#spring.config.import=optional:configserver:http://localhost:8080

#it will fetch pariticular file instead of default file
#spring.profiles.active=dev


#Actuator
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always

##Resilience4J
#resilience4j.circuitbreaker.instances.tourBreaker.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.tourBreaker.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.tourBreaker.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instances.tourBreaker.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instances.tourBreaker.waitDurationInOpenState=10s
#resilience4j.circuitbreaker.instances.tourBreaker.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.tourBreaker.register-health-indicator=true
#resilience4j.circuitbreaker.instances.tourBreaker.automatic-transition-from-open-to-half-open-enabled=true
#resilience4j.circuitbreaker.instances.tourBreaker.sliding-window-type=count-based
#
##Actuator configuration
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always


# Resilience4J CircuitBreaker
resilience4j.circuitbreaker.instances.tourBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.tourBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.tourBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.tourBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.tourBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.tourBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.tourBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.tourBreaker.slidingWindowType=count-based

#retry mechanism
#if we send one request because of retry mechanism attempts=5 it automatically send 5 attempts automatically.with each request gap 2seconds
resilience4j.retry.instances.tourBreaker.max-attempts=5
resilience4j.retry.instances.tourBreaker.wait-duration=2s

#rate limiting .number attempts a user can do.in order to avoid server crash
resilience4j.ratelimiter.instances.tourBreaker.timeout-duration=0ms
resilience4j.ratelimiter.instances.tourBreaker.limit-refresh-period=4s
resilience4j.ratelimiter.instances.tourBreaker.limit-for-period=2
#for every four seconds we have 2 calls .after  all calls are rejected within 0s .it will show number attempts ecxceed. 
#to simulate we use jmeter


# Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


